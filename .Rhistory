atl_cyclone_2022_update3 <- atl_cyclone_2022_update2 |>
mutate(
BasinNumberYear = if_else(is.na(status), as.character(`1`), NA_character_),
Name = if_else(is.na(status), as.character(`2`), NA_character_),
Entries = if_else(is.na(status), as.character(`3`), NA_character_)
) |>
fill(BasinNumberYear, Name, Entries) |>
filter(!is.na(status)) |>
relocate(BasinNumberYear, Name, Entries)
atl_cyclone_2022_update3
new_columns <- c("status", "latitude", "longitude", "max_wind", "min_pressure", "NE_extend_34", "SE_extend_34", "SW_extend_34", "NW_extend_34", "NE_extend_50", "SE_extend_50", "SW_extend_50", "NW_extend_50", "NE_extend_64", "SE_extend_64", "SW_extend_64", "NW_extend_64", "r_max_wind")
atl_cyclone_2022_update1 <- atl_cyclone_2022_raw |>
separate_wider_delim(`4`, delim = ",", names = new_columns) |>
mutate(
across(everything(), str_trim)
)
atl_cyclone_2022_update1
# Same steps as in A2, but you can put them all in the same pipeline!
at_cyclone <- str_c(cyclone_data_address, at_cyclone_filename, sep = "") |>
read_csv(
col_names = c(as.character(1:4)),
progress = FALSE,
show_col_types = FALSE
) |>
separate_wider_delim(
cols = `4`,
delim = ",",
names = new_columns
) |>
mutate(
across(everything(), str_trim),
across(everything(), ~na_if(., "-999")),
across(everything(), ~na_if(., "-99")),
BasinNumberYear = ifelse(is.na(status), `1`, NA),
Name = ifelse(is.na(status), `2`, NA),
Entries = ifelse(is.na(status), `3`, NA)
) |>
relocate(BasinNumberYear, Name, Entries) |>
fill(BasinNumberYear, Name, Entries) |>
filter(!is.na(status))  |>
select(-Entries) |>
separate_wider_position(
BasinNumberYear,
widths = c(Basin = 2, Number = 2, NameYear = 4)
) |>
separate_wider_position(
`1`,
widths = c(ObservYear = 4, Month = 2, Day = 2)
) |>
separate_wider_position(
`2`,
widths = c(Hour = 2, Minute = 2)
) |>
rename(
Identifier = `3`
) |>
mutate(
across(
c(NameYear, ObservYear, Month, Day, Hour, Minute, Number),
as.integer
)
) |>
mutate(across(max_wind:r_max_wind, as.numeric))
print(at_cyclone)
. = ottr::check("tests/at_cyclone.R")
# Same steps as in A2, but you can put them all in the same pipeline!
at_cyclone <- str_c(cyclone_data_address, at_cyclone_filename, sep = "") |>
read_csv(
col_names = c(as.character(1:4)),
progress = FALSE,
show_col_types = FALSE
) |>
separate_wider_delim(
cols = `4`,
delim = ",",
names = new_columns
) |>
mutate(
across(everything(), str_trim),
across(everything(), ~na_if(., "-999")),
across(everything(), ~na_if(., "-99")),
BasinNumberYear = ifelse(is.na(status), `1`, NA),
Name = ifelse(is.na(status), `2`, NA),
Entries = ifelse(is.na(status), `3`, NA)
) |>
relocate(BasinNumberYear, Name, Entries) |>
fill(BasinNumberYear, Name, Entries) |>
filter(!is.na(status))  |>
select(-Entries) |>
separate_wider_position(
BasinNumberYear,
widths = c(Basin = 2, Number = 2, NameYear = 4)
) |>
separate_wider_position(
`1`,
widths = c(ObservYear = 4, Month = 2, Day = 2)
) |>
separate_wider_position(
`2`,
widths = c(Hour = 2, Minute = 2)
) |>
rename(
Identifier = `3`
) |>
mutate(
across(
c(NameYear, ObservYear, Month, Day, Hour, Minute, Number),
as.integer
)
) |>
mutate(across(max_wind:r_max_wind, as.numeric))
print(at_cyclone)
at_cyclone
# Same steps as in A2, but you can put them all in the same pipeline!
at_cyclone <- str_c(cyclone_data_address, at_cyclone_filename, sep = "") |>
read_csv(
col_names = c(as.character(1:4)),
progress = FALSE,
show_col_types = FALSE
) |>
separate_wider_delim(
cols = `4`,
delim = ",",
names = new_columns
) |>
mutate(
across(everything(), str_trim),
across(everything(), ~na_if(., "-999")),
across(everything(), ~na_if(., "-99")),
BasinNumberYear = ifelse(is.na(status), `1`, NA),
Name = ifelse(is.na(status), `2`, NA),
Entries = ifelse(is.na(status), `3`, NA)
) |>
relocate(BasinNumberYear, Name, Entries) |>
fill(BasinNumberYear, Name, Entries) |>
filter(!is.na(status))  |>
select(-Entries) |>
separate_wider_position(
BasinNumberYear,
widths = c(Basin = 2, Number = 2, NameYear = 4)
) |>
separate_wider_position(
`1`,
widths = c(ObservYear = 4, Month = 2, Day = 2)
) |>
separate_wider_position(
`2`,
widths = c(Hour = 2, Minute = 2)
) |>
rename(
Identifier = `3`
) |>
mutate(
across(
c(NameYear, ObservYear, Month, Day, Hour, Minute, Number),
as.integer
)
) |>
mutate(across(max_wind:r_max_wind, as.numeric))
print(at_cyclone)
# Same steps as in A2, but you can put them all in the same pipeline!
at_cyclone <- str_c(cyclone_data_address, at_cyclone_filename, sep = "") |>
read_csv(
col_names = c(as.character(1:4)),
progress = FALSE,
show_col_types = FALSE
) |>
separate_wider_delim(
cols = `4`,
delim = ",",
names = new_columns
) |>
mutate(
across(everything(), str_trim),
across(everything(), ~na_if(., "-999")),
across(everything(), ~na_if(., "-99")),
BasinNumberYear = ifelse(is.na(status), `1`, NA),
Name = ifelse(is.na(status), `2`, NA),
Entries = ifelse(is.na(status), `3`, NA)
) |>
relocate(BasinNumberYear, Name, Entries) |>
fill(BasinNumberYear, Name, Entries) |>
filter(!is.na(status))  |>
select(-Entries) |>
separate_wider_position(
BasinNumberYear,
widths = c(Basin = 2, Number = 2, NameYear = 4)
) |>
separate_wider_position(
`1`,
widths = c(ObservYear = 4, Month = 2, Day = 2)
) |>
separate_wider_position(
`2`,
widths = c(Hour = 2, Minute = 2)
) |>
rename(
Identifier = `3`
) |>
mutate(
across(
c(NameYear, ObservYear, Month, Day, Hour, Minute, Number),
as.integer
)
) |>
mutate(across(max_wind:r_max_wind, as.numeric))
print(at_cyclone)
problems()`
# Same steps as in A2, but you can put them all in the same pipeline!
at_cyclone <- str_c(cyclone_data_address, at_cyclone_filename, sep = "") |>
read_csv(
col_names = c(as.character(1:4)),
progress = FALSE,
show_col_types = FALSE
) |>
separate_wider_delim(
cols = `4`,
delim = ",",
names = new_columns
) |>
mutate(
across(everything(), str_trim),
across(everything(), ~na_if(., "-999")),
across(everything(), ~na_if(., "-99")),
BasinNumberYear = ifelse(is.na(status), `1`, NA),
Name = ifelse(is.na(status), `2`, NA),
Entries = ifelse(is.na(status), `3`, NA)
) |>
relocate(BasinNumberYear, Name, Entries) |>
fill(BasinNumberYear, Name, Entries) |>
filter(!is.na(status))  |>
select(-Entries) |>
separate_wider_position(
BasinNumberYear,
widths = c(Basin = 2, Number = 2, NameYear = 4)
) |>
separate_wider_position(
`1`,
widths = c(ObservYear = 4, Month = 2, Day = 2)
) |>
separate_wider_position(
`2`,
widths = c(Hour = 2, Minute = 2)
) |>
rename(
Identifier = `3`
) |>
mutate(
across(
c(NameYear, ObservYear, Month, Day, Hour, Minute, Number),
as.integer
)
) |>
mutate(across(max_wind:r_max_wind, as.numeric))
print(at_cyclone)
problems()
# Same steps as in A2, but you can put them all in the same pipeline!
at_cyclone <- str_c(cyclone_data_address, at_cyclone_filename, sep = "") |>
read_csv(
col_names = c(as.character(1:4)),
progress = FALSE,
show_col_types = FALSE
) |>
separate_wider_delim(
cols = `4`,
delim = ",",
names = new_columns
) |>
mutate(
across(everything(), str_trim),
across(everything(), ~na_if(., "-999")),
across(everything(), ~na_if(., "-99")),
BasinNumberYear = ifelse(is.na(status), `1`, NA),
Name = ifelse(is.na(status), `2`, NA),
Entries = ifelse(is.na(status), `3`, NA)
) |>
relocate(BasinNumberYear, Name, Entries) |>
fill(BasinNumberYear, Name, Entries) |>
filter(!is.na(status))  |>
select(-Entries) |>
separate_wider_position(
BasinNumberYear,
widths = c(Basin = 2, Number = 2, NameYear = 4)
) |>
separate_wider_position(
`1`,
widths = c(ObservYear = 4, Month = 2, Day = 2)
) |>
separate_wider_position(
`2`,
widths = c(Hour = 2, Minute = 2)
) |>
rename(
Identifier = `3`
) |>
mutate(
across(
c(NameYear, ObservYear, Month, Day, Hour, Minute, Number),
as.integer
)
) |>
mutate(across(max_wind:r_max_wind, as.numeric))
print(at_cyclone)
problems(at_cyclone)
# Same steps as in A2, but you can put them all in the same pipeline!
at_cyclone <- str_c(cyclone_data_address, at_cyclone_filename, sep = "") |>
read_csv(
col_names = c(as.character(1:4)),
progress = FALSE,
show_col_types = FALSE
) |>
separate_wider_delim(
cols = `4`,
delim = ",",
names = new_columns
) |>
mutate(
across(everything(), str_trim),
across(everything(), ~na_if(., "-999")),
across(everything(), ~na_if(., "-99")),
BasinNumberYear = ifelse(is.na(status), `1`, NA),
Name = ifelse(is.na(status), `2`, NA),
Entries = ifelse(is.na(status), `3`, NA)
) |>
relocate(BasinNumberYear, Name, Entries) |>
fill(BasinNumberYear, Name, Entries) |>
filter(!is.na(status))  |>
select(-Entries) |>
separate_wider_position(
BasinNumberYear,
widths = c(Basin = 2, Number = 2, NameYear = 4)
) |>
separate_wider_position(
`1`,
widths = c(ObservYear = 4, Month = 2, Day = 2)
) |>
separate_wider_position(
`2`,
widths = c(Hour = 2, Minute = 2)
) |>
rename(
Identifier = `3`
) |>
mutate(
across(
c(NameYear, ObservYear, Month, Day, Hour, Minute, Number),
as.integer
)
) |>
mutate(across(max_wind:r_max_wind, as.numeric))
print(at_cyclone)
parsing_issues <- problems(at_cyclone)
print(parsing_issues)
# Same steps as in A2, but you can put them all in the same pipeline!
at_cyclone <- str_c(cyclone_data_address, at_cyclone_filename, sep = "") |>
read_csv(
col_names = c(as.character(1:4)),
progress = FALSE,
show_col_types = FALSE
) |>
separate_wider_delim(
cols = `4`,
delim = ",",
names = new_columns
) |>
mutate(
across(everything(), str_trim),
# make "-999" NAs, make "-99" NAs
# Create columns BasinNumberYear, Name, and Entries
across(everything(), ~na_if(., "-999")),
across(everything(), ~na_if(., "-99")),
BasinNumberYear = ifelse(is.na(status), `1`, NA),
Name = ifelse(is.na(status), `2`, NA),
Entries = ifelse(is.na(status), `3`, NA)
) |>
relocate(BasinNumberYear, Name, Entries) |>
fill(BasinNumberYear, Name, Entries) |>
filter(!is.na(status))  |>
select(-Entries) |>
separate_wider_position(
BasinNumberYear,
# Specify the widths
widths = c(Basin = 2, Number = 2, NameYear = 4)
) |>
separate_wider_position(
`1`,
# Specify the widths
widths = c(ObservYear = 4, Month = 2, Day = 2)
) |>
separate_wider_position(
`2`,
# Specify the widths
widths = c(Hour = 2, Minute = 2)
) |>
rename(
Identifier = `3`
) |>
mutate(
across(
c(NameYear, ObservYear, Month, Day, Hour,
Minute, Number),
as.integer
)
) |>
mutate(across(max_wind:r_max_wind, as.numeric))
print(at_cyclone)
. = ottr::check("tests/at_cyclone.R")
# Same steps as in A2, but you can put them all in the same pipeline!
at_cyclone <- str_c(cyclone_data_address, at_cyclone_filename, sep = "") |>
read_csv(
col_names = c(as.character(1:4)),
progress = FALSE,
show_col_types = FALSE
) |>
separate_wider_delim(
cols = `4`,
delim = ",",
names = new_columns
) |>
mutate(
across(everything(), str_trim),
# make "-999" NAs, make "-99" NAs
# Create columns BasinNumberYear, Name, and Entries
across(everything(), ~na_if(., "-999")),
across(everything(), ~na_if(., "-99")),
BasinNumberYear = ifelse(is.na(status), `1`, NA),
Name = ifelse(is.na(status), `2`, NA),
Entries = ifelse(is.na(status), `3`, NA)
) |>
relocate(BasinNumberYear, Name, Entries) |>
fill(BasinNumberYear, Name, Entries) |>
filter(!is.na(status))  |>
select(-Entries) |>
separate_wider_position(
BasinNumberYear,
# Specify the widths
widths = c(Basin = 2, Number = 2, NameYear = 4)
) |>
separate_wider_position(
`1`,
# Specify the widths
widths = c(ObservYear = 4, Month = 2, Day = 2)
) |>
separate_wider_position(
`2`,
# Specify the widths
widths = c(Hour = 2, Minute = 2)
) |>
rename(
Identifier = `3`
) |>
mutate(
across(
c(NameYear, ObservYear, Month, Day, Hour,
Minute, Number),
as.integer
)
) |>
mutate(across(max_wind:r_max_wind, as.numeric))
print(at_cyclone)
. = ottr::check("tests/at_cyclone.R")
. = ottr::check("tests/at_cyclone.R")
np_cyclone <- str_c(cyclone_data_address, np_cyclone_filename, sep = "") |>
# ALL of the steps all over again
read_csv(
col_names = c(as.character(1:4)),
progress = FALSE,
show_col_types = FALSE
) |>
separate_wider_delim(
cols = `4`,
delim = ",",
names = new_columns
) |>
mutate(
across(everything(), str_trim),
across(everything(), ~na_if(., "-999")),
across(everything(), ~na_if(., "-99")),
BasinNumberYear = ifelse(is.na(status), `1`, NA),
Name = ifelse(is.na(status), `2`, NA),
Entries = ifelse(is.na(status), `3`, NA)
) |>
relocate(BasinNumberYear, Name, Entries) |>
fill(BasinNumberYear, Name, Entries) |>
filter(!is.na(status)) |>
select(-Entries) |>
separate_wider_position(
BasinNumberYear,
widths = c(Basin = 2, Number = 2, NameYear = 4)
) |>
separate_wider_position(
`1`,
widths = c(ObservYear = 4, Month = 2, Day = 2)
) |>
separate_wider_position(
`2`,
widths = c(Hour = 2, Minute = 2)
) |>
rename(
Identifier = `3`
) |>
mutate(
across(
c(NameYear, ObservYear, Month, Day, Hour, Minute, Number),
as.integer
)
) |>
mutate(across(max_wind:r_max_wind, as.numeric))
print(np_cyclone)
. = ottr::check("tests/np_cyclone.R")
. = ottr::check("tests/at_cyclone.R")
. = ottr::check("tests/np_cyclone.R")
