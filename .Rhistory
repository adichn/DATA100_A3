x = "Observation Year",
y = "Month",
fill = "Frequency"
) +
theme_minimal()
# Load necessary libraries
library(dplyr)
library(ggplot2)
library(arrow)
# Load the datasets
climate_awareness <- read_parquet("climate_awareness.parquet")
happiness_data <- read_parquet("happiness.parquet")
# Aggregate data by country
# Average climate awareness by country
climate_awareness_country <- climate_awareness %>%
group_by(country) %>%
summarize(avg_climate_awareness = mean(aware_alot, na.rm = TRUE))
# Average perceptions of corruption by country
corruption_country <- happiness_data %>%
group_by(country) %>%
summarize(avg_perceptions_of_corruption = mean(perceptions_of_corruption, na.rm = TRUE))
# Merge climate awareness and corruption data by country
combined_data <- climate_awareness_country %>%
inner_join(corruption_country, by = "country")
# Create scatter plot with jitter, hex, and smooth line to show relationship
ggplot(combined_data, aes(x = avg_climate_awareness, y = avg_perceptions_of_corruption)) +
geom_jitter(color = "blue", size = 3, alpha = 5, width = 0.1, height = 0.1) +
geom_hex(aes(alpha = ..count..), bins = 30) +
scale_alpha_continuous(range = c(0.1, 1)) +  # Adjust alpha range for better visualization
geom_smooth(method = "lm", color = "red", se = TRUE) +  # Smoothing line with confidence interval
labs(
title = "Relationship between Climate Awareness and Perceptions of Corruption",
x = "Average Climate Awareness (%)",
y = "Average Perceptions of Corruption",
caption = "Each point represents a country."
) +
theme_minimal()
# This is an example of how you can control figures and captions in
# an R chunk. Note that you can reference figures using:
# \@ref(fig:insight1), where "insight1" is the label of this code
# chunk (the first bit of text after the "r" in "```{r label, options...}")
# below are possible correlations
world_map <- map_data("world")
ggplot() +
geom_polygon(data = world_map, aes(x = long, y = lat, group = group), fill = "lightgray", color = "white") +
# hurricanes +-5 of equator are extremely rare
geom_rect(aes(xmin = -180, xmax = 180, ymin = -5, ymax = 5), fill = "red", alpha = 0.2) +
geom_hex(data = cyclones_data, aes(x = lon, y = lat, fill = category), bins = 50, alpha = 0.7) +
scale_fill_viridis_d(name = "Storm Category") +
labs(
title = "North Atlantic and Northeast Pacific Cyclones by Category",
x = "Longitude",
y = "Latitude"
) +
scale_x_continuous(breaks = c(-180, -90, 0, 90, 180)) +
scale_y_continuous(breaks = c(-90, -45, 0, 45, 90)) +
theme_minimal()
ggplot() +
geom_polygon(data = world_map, aes(x = long, y = lat, group = group), fill = "lightgray", color = "white") +
geom_rect(aes(xmin = -180, xmax = 180, ymin = -5, ymax = 5), fill = "red", alpha = 0.2) +
geom_hex(data = cyclones_data, aes(x = lon, y = lat, fill = Basin, alpha = ..count..), bins = 50) +
scale_fill_viridis_d(name = "Storm Category") +
scale_alpha(range = c(0.35, 1.5)) +
labs(
title = "North Atlantic and Northeast Pacific Cyclones by Basin",
x = "Longitude",
y = "Latitude"
) +
scale_x_continuous(breaks = c(-180, -90, 0, 90, 180)) +
scale_y_continuous(breaks = c(-90, -45, 0, 45, 90)) +
theme_minimal()
ggplot(cyclones_data) +
aes(x = ObservYear, y = MonthName, fill = ..count..) +
geom_bin2d() +
scale_fill_distiller(direction = 1, palette = "YlOrRd") +
labs(
title = "Storm Frequency by Month and Year",
x = "Observation Year",
y = "Month",
fill = "Frequency"
) +
theme_minimal()
# Load necessary libraries
library(dplyr)
library(ggplot2)
library(arrow)
# Load the datasets
climate_awareness <- read_parquet("climate_awareness.parquet")
happiness_data <- read_parquet("happiness.parquet")
# Aggregate data by country
# Average climate awareness by country
climate_awareness_country <- climate_awareness %>%
group_by(country) %>%
summarize(avg_climate_awareness = mean(aware_alot, na.rm = TRUE))
# Average perceptions of corruption by country
corruption_country <- happiness_data %>%
group_by(country) %>%
summarize(avg_perceptions_of_corruption = mean(perceptions_of_corruption, na.rm = TRUE))
# Merge climate awareness and corruption data by country
combined_data <- climate_awareness_country %>%
inner_join(corruption_country, by = "country")
# Create scatter plot with jitter, hex, and smooth line to show relationship
ggplot(combined_data, aes(x = avg_climate_awareness, y = avg_perceptions_of_corruption)) +
geom_jitter(color = "blue", size = 3, alpha = 0.5, width = 0.1, height = 0.1) +
geom_hex(aes(alpha = ..count..), bins = 30) +
scale_alpha_continuous(range = c(0.1, 1)) +  # Adjust alpha range for better visualization
geom_smooth(method = "lm", color = "red", se = TRUE) +  # Smoothing line with confidence interval
labs(
title = "Relationship between Climate Awareness and Perceptions of Corruption",
x = "Average Climate Awareness (%)",
y = "Average Perceptions of Corruption",
caption = "Each point represents a country."
) +
theme_minimal()
# This is an example of how you can control figures and captions in
# an R chunk. Note that you can reference figures using:
# \@ref(fig:insight1), where "insight1" is the label of this code
# chunk (the first bit of text after the "r" in "```{r label, options...}")
# below are possible correlations
world_map <- map_data("world")
ggplot() +
geom_polygon(data = world_map, aes(x = long, y = lat, group = group), fill = "lightgray", color = "white") +
# hurricanes +-5 of equator are extremely rare
geom_rect(aes(xmin = -180, xmax = 180, ymin = -5, ymax = 5), fill = "red", alpha = 0.2) +
geom_hex(data = cyclones_data, aes(x = lon, y = lat, fill = category), bins = 50, alpha = 0.7) +
scale_fill_viridis_d(name = "Storm Category") +
labs(
title = "North Atlantic and Northeast Pacific Cyclones by Category",
x = "Longitude",
y = "Latitude"
) +
scale_x_continuous(breaks = c(-180, -90, 0, 90, 180)) +
scale_y_continuous(breaks = c(-90, -45, 0, 45, 90)) +
theme_minimal()
ggplot() +
geom_polygon(data = world_map, aes(x = long, y = lat, group = group), fill = "lightgray", color = "white") +
geom_rect(aes(xmin = -180, xmax = 180, ymin = -5, ymax = 5), fill = "red", alpha = 0.2) +
geom_hex(data = cyclones_data, aes(x = lon, y = lat, fill = Basin, alpha = ..count..), bins = 50) +
scale_fill_viridis_d(name = "Storm Category") +
scale_alpha(range = c(0.35, 1.5)) +
labs(
title = "North Atlantic and Northeast Pacific Cyclones by Basin",
x = "Longitude",
y = "Latitude"
) +
scale_x_continuous(breaks = c(-180, -90, 0, 90, 180)) +
scale_y_continuous(breaks = c(-90, -45, 0, 45, 90)) +
theme_minimal()
ggplot(cyclones_data) +
aes(x = ObservYear, y = MonthName, fill = ..count..) +
geom_bin2d() +
scale_fill_distiller(direction = 1, palette = "YlOrRd") +
labs(
title = "Storm Frequency by Month and Year",
x = "Observation Year",
y = "Month",
fill = "Frequency"
) +
theme_minimal()
climate_awareness_country <- climate_awareness |>
group_by(country) |>
summarize(avg_climate_awareness = mean(aware_alot, na.rm = TRUE))
corruption_country <- happiness_data |>
group_by(country) |>
summarize(avg_perceptions_of_corruption = mean(perceptions_of_corruption, na.rm = TRUE))
combined_data <- climate_awareness_country |>
inner_join(corruption_country, by = "country")
ggplot(combined_data, aes(x = avg_climate_awareness, y = avg_perceptions_of_corruption)) +
geom_jitter(color = "blue", size = 3, alpha = 0.5, width = 0.1, height = 0.1) +
geom_hex(aes(alpha = ..count..), bins = 30) +
scale_alpha_continuous(range = c(0.1, 1)) +
geom_smooth(method = "lm", color = "red", se = TRUE) +
labs(
title = "Relationship between Climate Awareness and Perceptions of Corruption",
x = "Average Climate Awareness (%)",
y = "Average Perceptions of Corruption",
caption = "Each point represents a country."
) +
theme_minimal()
# This is an example of how you can control figures and captions in
# an R chunk. Note that you can reference figures using:
# \@ref(fig:insight1), where "insight1" is the label of this code
# chunk (the first bit of text after the "r" in "```{r label, options...}")
# below are possible correlations
world_map <- map_data("world")
ggplot() +
geom_polygon(data = world_map, aes(x = long, y = lat, group = group), fill = "lightgray", color = "white") +
# hurricanes +-5 of equator are extremely rare
geom_rect(aes(xmin = -180, xmax = 180, ymin = -5, ymax = 5), fill = "red", alpha = 0.2) +
geom_hex(data = cyclones_data, aes(x = lon, y = lat, fill = category), bins = 50, alpha = 0.7) +
scale_fill_viridis_d(name = "Storm Category") +
labs(
title = "North Atlantic and Northeast Pacific Cyclones by Category",
x = "Longitude",
y = "Latitude"
) +
scale_x_continuous(breaks = c(-180, -90, 0, 90, 180)) +
scale_y_continuous(breaks = c(-90, -45, 0, 45, 90)) +
theme_minimal()
ggplot() +
geom_polygon(data = world_map, aes(x = long, y = lat, group = group), fill = "lightgray", color = "white") +
geom_rect(aes(xmin = -180, xmax = 180, ymin = -5, ymax = 5), fill = "red", alpha = 0.2) +
geom_hex(data = cyclones_data, aes(x = lon, y = lat, fill = Basin, alpha = ..count..), bins = 50) +
scale_fill_viridis_d(name = "Storm Category") +
scale_alpha(range = c(0.35, 1.5)) +
labs(
title = "North Atlantic and Northeast Pacific Cyclones by Basin",
x = "Longitude",
y = "Latitude"
) +
scale_x_continuous(breaks = c(-180, -90, 0, 90, 180)) +
scale_y_continuous(breaks = c(-90, -45, 0, 45, 90)) +
theme_minimal()
ggplot(cyclones_data) +
aes(x = ObservYear, y = MonthName, fill = ..count..) +
geom_bin2d() +
scale_fill_distiller(direction = 1, palette = "YlOrRd") +
labs(
title = "Storm Frequency by Month and Year",
x = "Observation Year",
y = "Month",
fill = "Frequency"
) +
theme_minimal()
ggplot(combined_data_long, aes(x = variable, y = value)) +
geom_boxplot(fill = "lightblue", color = "darkblue", outlier.color = "red", outlier.size = 2) +
labs(
title = "Distribution of Climate Awareness and Perceptions of Corruption by Country",
x = "Variable",
y = "Average Value",
caption = "Data represents averages per country."
) +
theme_minimal()
combined_data_long <- combined_data %>%
pivot_longer(cols = c(avg_climate_awareness, avg_perceptions_of_corruption),
names_to = "variable",
values_to = "value")
ggplot(combined_data_long, aes(x = variable, y = value)) +
geom_boxplot(fill = "lightblue", color = "darkblue", outlier.color = "red", outlier.size = 2) +
labs(
title = "Distribution of Climate Awareness and Perceptions of Corruption by Country",
x = "Variable",
y = "Average Value",
caption = "Data represents averages per country."
) +
theme_minimal()
climate_awareness_country <- climate_awareness |>
group_by(country) |>
summarize(avg_climate_awareness = mean(aware_alot, na.rm = TRUE))
corruption_country <- happiness_data |>
group_by(country) |>
summarize(avg_perceptions_of_corruption = mean(perceptions_of_corruption, na.rm = TRUE))
combined_data <- climate_awareness_country |>
inner_join(corruption_country, by = "country")
ggplot(combined_data, aes(x = avg_climate_awareness, y = avg_perceptions_of_corruption)) +
geom_jitter(color = "blue", size = 3, alpha = 0.5, width = 0.1, height = 0.1) +
geom_hex(aes(alpha = ..count..), bins = 30) +
scale_alpha_continuous(range = c(0.1, 1)) +
geom_smooth(method = "lm", color = "red", se = TRUE) +
labs(
title = "Relationship between Climate Awareness and Perceptions of Corruption",
x = "Average Climate Awareness (%)",
y = "Average Perceptions of Corruption",
caption = "Each point represents a country."
) +
theme_minimal()
combined_data_long <- combined_data %>%
pivot_longer(cols = c(avg_climate_awareness, avg_perceptions_of_corruption),
names_to = "variable",
values_to = "value")
ggplot(combined_data_long, aes(x = variable, y = value)) +
geom_boxplot(fill = "lightblue", color = "darkblue", outlier.color = "red", outlier.size = 2) +
labs(
title = "Distribution of Climate Awareness and Perceptions of Corruption by Country",
x = "Variable",
y = "Average Value",
caption = "Data represents averages per country."
) +
theme_minimal()
# This is an example of how you can control figures and captions in
# an R chunk. Note that you can reference figures using:
# \@ref(fig:insight1), where "insight1" is the label of this code
# chunk (the first bit of text after the "r" in "```{r label, options...}")
# below are possible correlations
world_map <- map_data("world")
ggplot() +
geom_polygon(data = world_map, aes(x = long, y = lat, group = group), fill = "lightgray", color = "white") +
# hurricanes +-5 of equator are extremely rare
geom_rect(aes(xmin = -180, xmax = 180, ymin = -5, ymax = 5), fill = "red", alpha = 0.2) +
geom_hex(data = cyclones_data, aes(x = lon, y = lat, fill = category), bins = 50, alpha = 0.7) +
scale_fill_viridis_d(name = "Storm Category") +
labs(
title = "North Atlantic and Northeast Pacific Cyclones by Category",
x = "Longitude",
y = "Latitude"
) +
scale_x_continuous(breaks = c(-180, -90, 0, 90, 180)) +
scale_y_continuous(breaks = c(-90, -45, 0, 45, 90)) +
theme_minimal()
ggplot() +
geom_polygon(data = world_map, aes(x = long, y = lat, group = group), fill = "lightgray", color = "white") +
geom_rect(aes(xmin = -180, xmax = 180, ymin = -5, ymax = 5), fill = "red", alpha = 0.2) +
geom_hex(data = cyclones_data, aes(x = lon, y = lat, fill = Basin, alpha = ..count..), bins = 50) +
scale_fill_viridis_d(name = "Storm Category") +
scale_alpha(range = c(0.35, 1.5)) +
labs(
title = "North Atlantic and Northeast Pacific Cyclones by Basin",
x = "Longitude",
y = "Latitude"
) +
scale_x_continuous(breaks = c(-180, -90, 0, 90, 180)) +
scale_y_continuous(breaks = c(-90, -45, 0, 45, 90)) +
theme_minimal()
ggplot(cyclones_data) +
aes(x = ObservYear, y = MonthName, fill = ..count..) +
geom_bin2d() +
scale_fill_distiller(direction = 1, palette = "YlOrRd") +
labs(
title = "Storm Frequency by Month and Year",
x = "Observation Year",
y = "Month",
fill = "Frequency"
) +
theme_minimal()
ggplot(combined_data_long, aes(x = variable, y = value)) +
geom_violin(fill = "lightblue", color = "darkblue", alpha = 0.7) +
geom_boxplot(width = 0.1, color = "darkblue", outlier.color = "red", outlier.size = 2) +
labs(
title = "Distribution of Climate Awareness and Perceptions of Corruption by Country",
x = "Variable",
y = "Average Value",
caption = "Data represents averages per country."
) +
theme_minimal()
ggplot(combined_data_long, aes(x = value, fill = variable)) +
geom_density(alpha = 0.5) +
labs(title = "Density Plot of Climate Awareness and Corruption Perception")
knitr::opts_chunk$set(error = TRUE)
# DO NOT PUT install.packages() IN AN RMD!!!
# While you're here, make sure you group number is filled in above.
# (And make sure it ends with a quotation mark).
library(tidyverse)
theme_set(theme_bw())
library(arrow)
library(openxlsx)
cyclone_data_address <- "https://www.nhc.noaa.gov/data/hurdat/"
at_cyclone_filename <- "hurdat2-1851-2022-050423.txt"
np_cyclone_filename <- "hurdat2-nepac-1949-2022-050423.txt"
new_columns <- c("status", "latitude", "longitude", "max_wind",
"min_pressure", "NE_extend_34", "SE_extend_34", "SW_extend_34",
"NW_extend_34", "NE_extend_50", "SE_extend_50", "SW_extend_50",
"NW_extend_50", "NE_extend_64", "SE_extend_64", "SW_extend_64",
"NW_extend_64", "r_max_wind"
)
# Same steps as in A2, but you can put them all in the same pipeline!
at_cyclone <- str_c(cyclone_data_address, at_cyclone_filename, sep = "") |>
read_csv(
col_names = c(as.character(1:4)),
progress = FALSE,
show_col_types = FALSE
) |>
separate_wider_delim(
cols = `4`,
delim = ",",
names = new_columns
) |>
mutate(
across(everything(), str_trim),
# make "-999" NAs, make "-99" NAs
# Create columns BasinNumberYear, Name, and Entries
across(everything(), ~na_if(., "-999")),
across(everything(), ~na_if(., "-99")),
BasinNumberYear = ifelse(is.na(status), `1`, NA),
Name = ifelse(is.na(status), `2`, NA),
Entries = ifelse(is.na(status), `3`, NA)
) |>
relocate(BasinNumberYear, Name, Entries) |>
fill(BasinNumberYear, Name, Entries) |>
filter(!is.na(status))  |>
select(-Entries) |>
separate_wider_position(
BasinNumberYear,
# Specify the widths
widths = c(Basin = 2, Number = 2, NameYear = 4)
) |>
separate_wider_position(
`1`,
# Specify the widths
widths = c(ObservYear = 4, Month = 2, Day = 2)
) |>
separate_wider_position(
`2`,
# Specify the widths
widths = c(Hour = 2, Minute = 2)
) |>
rename(
Identifier = `3`
) |>
mutate(
across(
c(NameYear, ObservYear, Month, Day, Hour,
Minute, Number),
as.integer
)
) |>
mutate(across(max_wind:r_max_wind, as.numeric))
print(at_cyclone)
# echo = FALSE will set the Rmd to *not* show the R code. Don't change this.
# You may change the default figure width and figure height as you please.
knitr::opts_chunk$set(echo = FALSE, message = FALSE, fig.width = 6)
# Put any libraries that you need to load here.
# DO NOT PUT "install.packages()" IN AN RMD FILE!!!
library(tidyverse)
library(arrow)
library(maps)
library(tinytex)
library(sf)
library(rnaturalearth)
# echo = FALSE will set the Rmd to *not* show the R code. Don't change this.
# You may change the default figure width and figure height as you please.
knitr::opts_chunk$set(echo = FALSE, message = FALSE, fig.width = 6)
# Put any libraries that you need to load here.
# DO NOT PUT "install.packages()" IN AN RMD FILE!!!
library(tidyverse)
library(arrow)
library(maps)
library(tinytex)
library(sf)
install.packages("rnaturalearth")
library(rnaturalearth)
# echo = FALSE will set the Rmd to *not* show the R code. Don't change this.
# You may change the default figure width and figure height as you please.
knitr::opts_chunk$set(echo = FALSE, message = FALSE, fig.width = 6)
# Put any libraries that you need to load here.
# DO NOT PUT "install.packages()" IN AN RMD FILE!!!
library(tidyverse)
library(arrow)
library(maps)
library(tinytex)
library(sf)
library(rnaturalearth)
# Put in your code to load in the data set, along with any
# necessary cleaning beyond what was done in Part 1
ice_extent_yearly <- read_parquet("ice_extent_yearly.parquet")
ggplot(ice_extent_yearly, aes(x = year, color = name, linetype = region)) +
geom_line(aes(y = value), size = 1) +
labs(title = "Yearly Ice Extent Trends in Antarctic and Arctic",
x = "Year",
y = "Ice Extent") +
theme_minimal() +
theme(legend.position = "bottom")
ice_extent_yearly
ggplot(cyclones_data, aes(x = year, color = name, linetype = region)) +
geom_line(aes(y = value), size = 1) +
labs(title = "Yearly Ice Extent Trends in Antarctic and Arctic",
x = "Year",
y = "Ice Extent") +
theme_minimal() +
theme(legend.position = "bottom")
# Put in your code to load in the data set, along with any
# necessary cleaning beyond what was done in Part 1
world_map <- map_data("world")
climate_awareness <- read_parquet("climate_awareness.parquet")
climate_awareness <- climate_awareness |>
mutate(country = case_when(
country == "United.States" ~ "United States of America",
country == "United.Kingdom" ~ "UK",
country == "United.Arab.Emirates" ~ "UAE",
country == "Trinidad.and.Tobago" ~ "Trinidad",
country == "Sri.Lanka" ~ "Sri Lanka",
country == "Bolivia.(Plurinational.State.of)" ~ "Bolivia",
country == "Bosnia.and.Herzegovina" ~ "Bosnia",
country == "Congo.(Democratic.Republic.of.the)" ~ "Congo",
country == "Costa.Rica" ~ "Costa Rica",
country == "Cote.d'Ivoire" ~ "Ivory Coast",
country == "Czechia" ~ "Czech Republic",
country == "Dominican.Republic" ~ "Dominican Republic",
country == "El.Salvador" ~ "El Salvador",
country == "Hong.Kong" ~ "Hong Kong",
country == "Lao.People's.Democratic.Republic" ~ "Laos",
country == "New.Zealand" ~ "New Zealand",
country == "Puerto.Rico" ~ "Puerto Rico",
country == "North.MAcedonia" ~ "Macedonia",
country == "Saudi.Arabia" ~ "Saudi Arabia",
country == "South.Africa" ~ "South Africa",
country == "South.Korea" ~ "South Korea",
country == "Antigua" ~ "Antigua and Barbuda",
TRUE ~ country
))
climate_awareness_mapped <- climate_awareness |>
right_join(world_map, by = c("country" = "region"))
climate_awareness
# Put in your code to load in the data set, along with any
# necessary cleaning beyond what was done in Part 1
ice_extent_yearly <- read_parquet("ice_extent_yearly.parquet")
ggplot(ice_extent_yearly, aes(x = year, color = name, linetype = region)) +
geom_line(aes(y = value), size = 1) +
labs(title = "Yearly Ice Extent Trends in Antarctic and Arctic",
x = "Year",
y = "Ice Extent") +
theme_minimal() +
theme(legend.position = "bottom")
# Reminder: do NOT print your data to the screen unless it's
# completely necessary
# Put in your code to load in the data set, along with any
# necessary cleaning beyond what was done in Part 1
ice_extent_yearly <- read_parquet("ice_extent_yearly.parquet")
# Put in your code to load in the data set, along with any
# necessary cleaning beyond what was done in Part 1
ice_extent_yearly <- read_parquet("ice_extent_yearly.parquet")
# Reminder: do NOT print your data to the screen unless it's
# completely necessary
